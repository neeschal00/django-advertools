# this configuration will be added in /etc/nginx/sites-enabled/advertools.smartmgr.com
# and restarted with this added 

# server {
#     listen 80;
#     server_name 190.92.151.242;

#     location / {
#         proxy_pass http://0.0.0.0:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }
# }


# server {
#     listen 80;
#     server_name advertools.smartmgr.com www.advertools.smartmgr.com;

#     location / {
#         proxy_pass http://0.0.0.0:8000;  # Replace with your Django app's address
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_redirect off;
#     }
# }

# server {
#     listen 443 ssl;
#     server_name advertools.smartmgr.com www.advertools.smartmgr.com;

#     ssl_certificate /etc/letsencrypt/live/advertools.smartmgr.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/advertools.smartmgr.com/privkey.pem;

#     location / {
#         proxy_pass http://0.0.0.1:8000;  # Replace with your Django app's address
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_redirect off;
#     }
# }



# server {
#     if ($host = www.advertools.smartmgr.com) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot


#     if ($host = advertools.smartmgr.com) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot


#     listen 80;
#     server_name advertools.smartmgr.com www.advertools.smartmgr.com;

#     location / {
#         proxy_pass http://0.0.0.0:8000;  # Replace with your Django app's address
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_redirect off;
#     }

#     location /ws/ {
#         proxy_pass         http://0.0.0.0:8001;
#         proxy_http_version  1.1;
#         proxy_set_header    Connection          $connection_upgrade;
#         proxy_set_header    Upgrade             $http_upgrade;
#         proxy_set_header    Host                $host;
#         proxy_set_header    X-Real-IP           $remote_addr;
#         proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
#     }
# }

# server {
#     listen 443 ssl;
#     server_name advertools.smartmgr.com www.advertools.smartmgr.com;
#     ssl_certificate /etc/letsencrypt/live/advertools.smartmgr.com/fullchain.pem; # managed by Certbot
#     ssl_certificate_key /etc/letsencrypt/live/advertools.smartmgr.com/privkey.pem; # managed by Cert>


#     location / {
#         proxy_pass http://0.0.0.0:8000;  # Replace with your Django app's address
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_redirect off;
#     }

#     location /ws/ {
#         proxy_pass         http://0.0.0.0:8001;
#         proxy_http_version  1.1;
#         proxy_set_header    Connection          $connection_upgrade;
#         proxy_set_header    Upgrade             $http_upgrade;
#         proxy_set_header    Host                $host;
#         proxy_set_header    X-Real-IP           $remote_addr;
#         proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
#     }
# }

# # server {
# #     server_name advertools.smartmgr.com www.smartmgr.com;

    
# #     location /static/ {
# #         root /home/tactical/django-advertools/staticfiles;
# #     }
    
# #      location / {
# #         include proxy_params; #is a short for all the above mentioned headers in prev servers
# #         proxy_pass http://unix:/run/gunicorn.sock;
# #     }

# #     location /ws/ {
# #         proxy_http_version 1.1;
# #         proxy_set_header Upgrade $http_upgrade;
# #         proxy_set_header Connection "upgrade";
# #         proxy_redirect off;
# #         proxy_pass http://0.0.0.0:8001;
# #     }
    

# # }


# server {
#     if ($host = www.advertools.smartmgr.com) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot


#     if ($host = advertools.smartmgr.com) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot


#     listen 80;
#     server_name advertools.smartmgr.com www.advertools.smartmgr.com;

#     location /static/ {
#         alias /home/tactical/django-advertools/staticfiles;
#     }

#     location / {
#         include proxy_params;
#         proxy_pass http://unix:/run/gunicorn.sock;
#     }

#     location /ws/ {
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_redirect off;
#         proxy_pass http://0.0.0.0:8001;
#     }

# }

# server {
#     listen 443 ssl;
#     server_name advertools.smartmgr.com www.advertools.smartmgr.com;
#     ssl_certificate /etc/letsencrypt/live/advertools.smartmgr.com/fullchain.pem; # managed by Certbot
#     ssl_certificate_key /etc/letsencrypt/live/advertools.smartmgr.com/privkey.pem; # managed by Certbot


#     location /static/ {
#         alias /home/tactical/django-advertools/staticfiles;
#     }

#     location / {
#         include proxy_params;
#         proxy_pass http://unix:/run/gunicorn.sock;
#     }

#     location /ws/ {
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_redirect off;
#         proxy_pass http://0.0.0.0:8001;
#     }
# }

#create upstream to reference the WS server and use it as a service in main server config
upstream websocketS{
    server 0.0.0.0:8001; #daphne server running port 8001
}

#main server configuration for http in default port 80 
server {

    if ($host = www.advertools.smartmgr.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = advertools.smartmgr.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name advertools.smartmgr.com www.advertools.smartmgr.com; #domain or ip based on req.

    # static file configuration
    location /static/ {
        autoindex on;
        alias /home/tactical/django-advertools/staticfiles/;
    }

    location /media/{
        autoindex on;
        alias /home/tactical/django-advertools/media/;
    }

    location / {
        include proxy_params; #take reference of the proxy parameters existing in the nginx dir
        proxy_pass http://unix:/run/gunicorn.sock;
    }

    location /ws/ {
        proxy_http_version 1.1; #ws uses http 1.1
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_pass http://websocketS;
    }

}

#configuration with enabled https for port 443 with generratessl cretificate for the domains(server name)
server {
    listen 443 ssl;
    server_name advertools.smartmgr.com www.advertools.smartmgr.com;
    ssl_certificate /etc/letsencrypt/live/advertools.smartmgr.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/advertools.smartmgr.com/privkey.pem; # managed by Certbot


    location /static/ {
        autoindex on;
        alias /home/tactical/django-advertools/staticfiles/;
    }

    location /media/{
        autoindex on;
        alias /home/tactical/django-advertools/media/;
    }


    location / {
        include proxy_params;
        proxy_pass http://unix:/run/gunicorn.sock;
    }

    location /ws/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_pass http://websocketS;
    }


}
